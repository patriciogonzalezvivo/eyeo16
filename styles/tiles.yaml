# Author @patriciogv - 2015

sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson
scene:
    background:
        color: white
layers:
    earth:
        data: { source: osm }
        draw:
            showTile:
                order: 0
                color: '#222'
    boundaries:
        data: { source: osm }
        draw:
            lines:
                order: 1
                color: lightgray
                width: 1px
    water:
        data: { source: osm }
        draw:
            showTile:
                order: 1
                color: white

cameras:
    perspective:
        type: flat

styles:
    space-tile:
        shaders:
            blocks:
                global: |
                    // Variant to be add to both vertex and fragments shaders
                    varying vec3 v_pos;
                    //
                    // Get the coordinates in tile space
                    // ================================
                    vec2 getTileCoords () {
                        return fract(v_pos.xy);
                    }
                    
                    float box(in vec2 st, in vec2 size){
                        size = vec2(0.5) - size*0.5;
                        vec2 uv = smoothstep(size,
                                            size+vec2(0.001),
                                            st);
                        uv *= smoothstep(size,
                                        size+vec2(0.001),
                                        vec2(1.0)-st);
                        return uv.x*uv.y;
                    }
                    
                    float cross(in vec2 st, vec2 size){
                        return  clamp(box(st, vec2(size.x*0.5,size.y*0.125)) +
                                box(st, vec2(size.y*0.125,size.x*0.5)),0.,1.);
                    }
                position: |
                    // Normalize the attribute position of a vertex
                    v_pos = modelPosition().xyz;
    showTile:
        base: polygons
        mix: space-tile
        shaders:
            blocks:
                color: |
                    vec2 st = getTileCoords();
                    // Add a line at the lower left side of each tile                  
                    color.rgb *= .7+(step(.003,st.x)*step(.003,st.y));
                    color.rgb *= 1.0-cross(abs(st-.5), vec2(0.08,0.09));